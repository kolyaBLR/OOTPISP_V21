using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

/*
При выполнении контрольных заданий необходимо: 
Если в задании требуется разработать класс, то он должен включать:
-	компоненты данные
-	методы:
	а) конструктор по умолчанию;
	б) конструктор с параметрами;
	в) конструктор копирования;
	г) деструктор;
	д) методы класса для работы с данными.
Компоненты данные класса должны иметь атрибут private или protect-ed (в зависимости от необходимости).
При реализации задания  1  функцию вывода содержимого объекта ре-ализовать как внешнюю по отношению к классу
При реализации задания  3  в базовый класс (кроме перечисленных выше)
добавить методы: set – инициализации данных базового класса, get – возврата данных класса.

 вариант 21  
1.  Разработать класс реализующий список (однонаправленное кольцо).
    Элемент списка содержит информацию об абонентах телефонной сети.
    Элемент очереди содержит ФИО абонента, № телефона, состояние его счета.
    В классе реализовать методы добавления нового абонента, поиск абонента, корректировку информации по абоненту.  

2.  Реализовать класс String для работы со строками символов. Перегрузить операторы  = и >=. 

3.  Создать иерархию классов представляющих простое наследование.
    Базовый класс – вектор (числовой динамический массив (int *)).
    Производный класс – методы, работающие с данными базового класса.
    Реализовать в производном классе метод – нахождения в векторе 2 элементов с наибольшими значениями и заме-ны их местами.
 */
namespace OOTPISP_V21
{
    class Program
    {
        static void Main(string[] args)
        {
            ListRing list = new ListRing();
            list.Print();

            list.Add(new String("Гномик аноним"), new String("****"));
            list.Add(new String("Гномик"), new String("+ 375 29 322 22"));
            list.Add(new String("Гномик таксист"), new String("7788"));
            list.Print();

            Customer customer = list.Search(new String("Гномик таксист"), new String("7788"));
            customer.fullName = new String("Гномик Петя");
            customer.phone = new String("80 55 432 22 22");
            list.Update(customer);
            list.Print();

            list.Add(new String("Очень злой Орк"), new String("3123 1231 2"));
            customer = list.Search(new String("Гномик"), new String("+ 375 29 322 22"));
            customer.fullName = new String("Злой Орк");
            customer.phone = new String("999 213 21");
            list.Update(customer);
            list.Print();

            List<int> sortList = new List<int>
            {
                2, 2, 4, 21, 4, 54, -21, 0, -10
            };
            Vector vector = new Vector(sortList);
            Console.WriteLine("Свап 2-ух максимальных элементов массива");
            vector.Print("До");
            vector.Sort();
            vector.Print("После");

            Console.ReadKey();
        }
    }
}
